'use strict';

const auth = require('./shared/better-auth.Cu3hP7CH.cjs');
const index = require('./shared/better-auth.ANpbi45u.cjs');
const misc = require('./shared/better-auth.BLDOwz3i.cjs');
const socialProviders_index = require('./shared/better-auth.Dnv9OP1O.cjs');
const id = require('./shared/better-auth.Bg6iw3ig.cjs');
const logger = require('./shared/better-auth.DTvRBuq4.cjs');
const betterCall = require('better-call');
require('./shared/better-auth.CWoe8tep.cjs');
require('zod');
require('./shared/better-auth.B6fIklBU.cjs');
require('@better-auth/utils/base64');
require('@better-auth/utils/hmac');
require('@better-auth/utils/binary');
require('./shared/better-auth.C0qxpMUS.cjs');
require('./api/index.cjs');
require('./shared/better-auth.oHfRlmfe.cjs');
require('./shared/better-auth.C1hdVENX.cjs');
require('./shared/better-auth.DgMx7bVs.cjs');
require('./shared/better-auth.DxBcELEX.cjs');
require('./shared/better-auth.DkbzbiTb.cjs');
require('defu');
require('./crypto/index.cjs');
require('@better-auth/utils/hash');
require('@noble/ciphers/chacha.js');
require('@noble/ciphers/utils.js');
require('jose');
require('@noble/hashes/scrypt.js');
require('@better-auth/utils/hex');
require('@noble/hashes/utils.js');
require('./shared/better-auth.CYeOI8C-.cjs');
require('@better-auth/utils/random');
require('./shared/better-auth.ZUJMxXV3.cjs');
require('./shared/better-auth.DF_1VOmo.cjs');
require('./shared/better-auth.D2444EHu.cjs');
require('kysely');
require('./shared/better-auth.CyoHIFUH.cjs');
require('./shared/better-auth.BBk8MRta.cjs');
require('./shared/better-auth.CDXNofOe.cjs');
require('@better-fetch/fetch');
require('jose/errors');
require('./shared/better-auth.uykCWCYS.cjs');



exports.betterAuth = auth.betterAuth;
exports.createTelemetry = auth.createTelemetry;
exports.getTelemetryAuthConfig = auth.getTelemetryAuthConfig;
exports.BetterAuthError = index.BetterAuthError;
exports.MissingDependencyError = index.MissingDependencyError;
exports.capitalizeFirstLetter = misc.capitalizeFirstLetter;
exports.HIDE_METADATA = socialProviders_index.HIDE_METADATA;
exports.generateState = socialProviders_index.generateState;
exports.parseState = socialProviders_index.parseState;
exports.generateId = id.generateId;
exports.createLogger = logger.createLogger;
exports.levels = logger.levels;
exports.logger = logger.logger;
exports.shouldPublishLog = logger.shouldPublishLog;
exports.APIError = betterCall.APIError;
